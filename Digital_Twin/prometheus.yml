# prometheus.yml
global:
  scrape_interval: 15s # How frequently to scrape targets
  evaluation_interval: 15s # How frequently to evaluate rules

scrape_configs:
  # 1. Scrape Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  # 2. Scrape the Flask App (digital-twin-app)
  # This target is defined in your docker-compose.yml
  - job_name: 'flask-app'
    metrics_path: /metrics # The endpoint your app exposes
    static_configs:
      - targets: ['digital-twin-app:8000'] # Service name and port from docker-compose

  # 3. Scrape Celery Metrics (Requires a Celery Exporter)
  # You must add a 'celery-exporter' service to your docker-compose.yml
  - job_name: 'celery'
    static_configs:
      - targets: ['celery-exporter:9808'] # Default port for celery-exporter
    
  # 4. Scrape MQTT Broker Metrics (Requires an MQTT Exporter)
  # This will scrape metrics from your 'mosquitto' service
  # You must add an 'mqtt-exporter' service to your docker-compose.yml
  - job_name: 'mqtt-broker'
    static_configs:
      - targets: ['mqtt-exporter:9341'] # Default port for mqtt-exporter

  # 5. Scrape your new MQTT Ingestor service
  # This assumes your 'mqtt_ingestor.py' will also expose a /metrics endpoint
  - job_name: 'mqtt-ingestor'
    metrics_path: /metrics
    static_configs:
      - targets: ['mqtt-ingestor:8001'] # Assumed port for your new service